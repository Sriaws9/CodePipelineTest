version: 0.2
 
phases:
  install:
    commands:
      #Install the cfn-lint plugin
      - pip install cfn-lint
  pre_build:
    commands:
      - echo "pre build"
      - cfn-lint $SG_CF_TEMPLATE
      - cfn-lint $CF_TEMPLATE             
      
  build:
    commands:
       - echo "build stage"
       - echo $CF_TEMPLATE_VALUES
       - echo $SG_CF_TEMPLATE_VALUES       
       - export ENV=$(cat $CF_TEMPLATE_VALUES | jq .[0] | jq 'split("=")' | jq -r .[1])
       - export SG_STACK_NAME=pge-crm-rds-sg-$ENV-stack
       - export DB_NAME=pgecrm-$ENV-db
       - export DB_STACK_NAME=pgecrm-$ENV-db-stack
       
       # Craete the SG 
       - echo $SG_CF_TEMPLATE
       - echo $CF_TEMPLATE_VALUES
       - echo $SG_STACK_NAME
       - echo $RDS_STACK_NAME
       - aws cloudformation deploy --stack-name $SG_STACK_NAME --template-file $SG_CF_TEMPLATE --parameter-overrides file://$SG_CF_TEMPLATE_VALUES --tags file://$CF_TAGS_FILE_PATH
       -  sleep 2

       # Creating Database   
       - aws cloudformation deploy --stack-name $DB_STACK_NAME --template-file $CF_TEMPLATE --parameter-overrides file://$CF_TEMPLATE_VALUES --tags file://$CF_TAGS_FILE_PATH
             
       
  post_build:
    commands:
       - if [ "$CODEBUILD_BUILD_SUCCEEDING" -eq 0 ]; then echo "ERROR BUILD FAILED " && exit 1 ; fi
       - sed -i "s/@RDS_NAME@/$DB_NAME/g" $SNS_MESSAGE    
       - cat $SNS_MESSAGE
       - aws sns publish --topic-arn $SNS_TOPIC__ARN_NOTIFY_STATUS --subject  "AWS RDS Create/Update Status" --message file://$SNS_MESSAGE
       - echo "Verify the DB is connection is done in VerifyDBConnection stage"


